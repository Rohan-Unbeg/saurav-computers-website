---
import type { Course } from '../../types/course';

interface Props {
  course: Course;
  index: number;
}

const { course } = Astro.props as Props;

// Get image path for the course
const getImagePath = (courseName: string) => {
  // Convert course name to lowercase and replace spaces with hyphens
  const imageName = courseName.toLowerCase().replace(/\s+/g, '-');
  return `/images/courses/${imageName}.jpg`;
};
---

<div  class="course-card bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-100 dark:border-gray-700 overflow-hidden hover:shadow-md transition-shadow duration-300 flex flex-col h-full" data-category={course.category || 'uncategorized'}>
  <div class="relative h-48 bg-gray-100 dark:bg-gray-700 overflow-hidden">
    <img 
      src={getImagePath(course.title)} 
      alt={course.title}
      class="w-full h-full object-cover transition-transform duration-300 hover:scale-105"
      loading="lazy"
      onerror="this.onerror=null; this.src='/images/course-placeholder.jpg'"
    />
    <div class="absolute bottom-0 left-0 right-0 p-2 bg-gradient-to-t from-black/70 to-transparent">
      <span class="text-white text-sm font-medium">{course.duration}</span>
    </div>
  </div>
  <div class="p-6 flex flex-col flex-1">
    <div class="flex justify-between items-start mb-3">
      <h3 class="text-xl font-bold text-gray-900 dark:text-white">{course.title}</h3>
      {course.level && (
        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-indigo-100 text-indigo-800 dark:bg-indigo-900 dark:text-indigo-200 whitespace-nowrap flex-shrink-0 ml-2">
          {course.level}
        </span>
      )}
    </div>
    
    <p class="text-gray-600 dark:text-gray-300 mb-4 line-clamp-3 flex-grow-0">
      {course.description}
    </p>
    
    <div class="flex items-center text-sm text-gray-500 dark:text-gray-400 mb-4">
      <span class="flex items-center">
        <svg class="w-4 h-4 mr-1.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
          <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"></path>
        </svg>
        {course.duration}
      </span>
    </div>

    <div class="mb-5">
      <h4 class="text-sm font-medium text-gray-900 dark:text-white mb-2">You'll learn:</h4>
      <ul class="space-y-2">
        {course.outcomes.slice(0, 3).map((outcome) => (
          <li class="flex items-start">
            <svg class="h-4 w-4 text-green-500 mt-0.5 mr-2 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
            </svg>
            <span class="text-sm text-gray-600 dark:text-gray-300 line-clamp-2">{outcome}</span>
          </li>
        ))}
        {course.outcomes.length > 3 && (
          <li class="text-sm text-indigo-600 dark:text-indigo-400 ml-6">+{course.outcomes.length - 3} more</li>
        )}
      </ul>
    </div>

    <div class="mt-auto pt-4 border-t border-gray-100 dark:border-gray-700">
      <a 
        href={`/courses/${course.id}`}
        class="w-full inline-flex justify-center items-center px-4 py-2.5 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors duration-200"
      >
        View Details
      </a>
    </div>
  </div>
  </div>
</div>